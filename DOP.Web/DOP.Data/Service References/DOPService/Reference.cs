//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DOP.Data.DOPService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonnelDto", Namespace="http://schemas.datacontract.org/2004/07/DOP.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class PersonnelDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FamilyStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonnelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adress {
            get {
                return this.AdressField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressField, value) != true)) {
                    this.AdressField = value;
                    this.RaisePropertyChanged("Adress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FamilyState {
            get {
                return this.FamilyStateField;
            }
            set {
                if ((this.FamilyStateField.Equals(value) != true)) {
                    this.FamilyStateField = value;
                    this.RaisePropertyChanged("FamilyState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonnelId {
            get {
                return this.PersonnelIdField;
            }
            set {
                if ((this.PersonnelIdField.Equals(value) != true)) {
                    this.PersonnelIdField = value;
                    this.RaisePropertyChanged("PersonnelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentDto", Namespace="http://schemas.datacontract.org/2004/07/DOP.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class DepartmentDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adress {
            get {
                return this.AdressField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressField, value) != true)) {
                    this.AdressField = value;
                    this.RaisePropertyChanged("Adress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DOPService.IPersonnelDepartmentService")]
    public interface IPersonnelDepartmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetAllPersonnel", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetAllPersonnelResponse")]
        System.Collections.Generic.List<DOP.Data.DOPService.PersonnelDto> GetAllPersonnel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetAllPersonnel", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetAllPersonnelResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DOP.Data.DOPService.PersonnelDto>> GetAllPersonnelAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetPersonnelByDepartmentId", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetPersonnelByDepartmentIdResponse" +
            "")]
        System.Collections.Generic.List<DOP.Data.DOPService.PersonnelDto> GetPersonnelByDepartmentId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetPersonnelByDepartmentId", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetPersonnelByDepartmentIdResponse" +
            "")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DOP.Data.DOPService.PersonnelDto>> GetPersonnelByDepartmentIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetPersonnelById", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetPersonnelByIdResponse")]
        DOP.Data.DOPService.PersonnelDto GetPersonnelById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetPersonnelById", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetPersonnelByIdResponse")]
        System.Threading.Tasks.Task<DOP.Data.DOPService.PersonnelDto> GetPersonnelByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetAllDepartments", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetAllDepartmentsResponse")]
        System.Collections.Generic.List<DOP.Data.DOPService.DepartmentDto> GetAllDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetAllDepartments", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetAllDepartmentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DOP.Data.DOPService.DepartmentDto>> GetAllDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetDepartmentByPersonnelId", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetDepartmentByPersonnelIdResponse" +
            "")]
        DOP.Data.DOPService.DepartmentDto GetDepartmentByPersonnelId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetDepartmentByPersonnelId", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetDepartmentByPersonnelIdResponse" +
            "")]
        System.Threading.Tasks.Task<DOP.Data.DOPService.DepartmentDto> GetDepartmentByPersonnelIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetDepartmentById", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetDepartmentByIdResponse")]
        DOP.Data.DOPService.DepartmentDto GetDepartmentById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonnelDepartmentService/GetDepartmentById", ReplyAction="http://tempuri.org/IPersonnelDepartmentService/GetDepartmentByIdResponse")]
        System.Threading.Tasks.Task<DOP.Data.DOPService.DepartmentDto> GetDepartmentByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonnelDepartmentServiceChannel : DOP.Data.DOPService.IPersonnelDepartmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonnelDepartmentServiceClient : System.ServiceModel.ClientBase<DOP.Data.DOPService.IPersonnelDepartmentService>, DOP.Data.DOPService.IPersonnelDepartmentService {
        
        public PersonnelDepartmentServiceClient() {
        }
        
        public PersonnelDepartmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonnelDepartmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonnelDepartmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonnelDepartmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<DOP.Data.DOPService.PersonnelDto> GetAllPersonnel() {
            return base.Channel.GetAllPersonnel();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DOP.Data.DOPService.PersonnelDto>> GetAllPersonnelAsync() {
            return base.Channel.GetAllPersonnelAsync();
        }
        
        public System.Collections.Generic.List<DOP.Data.DOPService.PersonnelDto> GetPersonnelByDepartmentId(int id) {
            return base.Channel.GetPersonnelByDepartmentId(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DOP.Data.DOPService.PersonnelDto>> GetPersonnelByDepartmentIdAsync(int id) {
            return base.Channel.GetPersonnelByDepartmentIdAsync(id);
        }
        
        public DOP.Data.DOPService.PersonnelDto GetPersonnelById(int id) {
            return base.Channel.GetPersonnelById(id);
        }
        
        public System.Threading.Tasks.Task<DOP.Data.DOPService.PersonnelDto> GetPersonnelByIdAsync(int id) {
            return base.Channel.GetPersonnelByIdAsync(id);
        }
        
        public System.Collections.Generic.List<DOP.Data.DOPService.DepartmentDto> GetAllDepartments() {
            return base.Channel.GetAllDepartments();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DOP.Data.DOPService.DepartmentDto>> GetAllDepartmentsAsync() {
            return base.Channel.GetAllDepartmentsAsync();
        }
        
        public DOP.Data.DOPService.DepartmentDto GetDepartmentByPersonnelId(int id) {
            return base.Channel.GetDepartmentByPersonnelId(id);
        }
        
        public System.Threading.Tasks.Task<DOP.Data.DOPService.DepartmentDto> GetDepartmentByPersonnelIdAsync(int id) {
            return base.Channel.GetDepartmentByPersonnelIdAsync(id);
        }
        
        public DOP.Data.DOPService.DepartmentDto GetDepartmentById(int id) {
            return base.Channel.GetDepartmentById(id);
        }
        
        public System.Threading.Tasks.Task<DOP.Data.DOPService.DepartmentDto> GetDepartmentByIdAsync(int id) {
            return base.Channel.GetDepartmentByIdAsync(id);
        }
    }
}
